# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def preorder(self,root,all):
        if root!=None:
            all.append(root.val)
            self.preorder(root.left,all)
            self.preorder(root.right,all)

    def flatten(self, root: Optional[TreeNode]) -> None:
        """
        Do not return anything, modify root in-place instead.
        """
        if root==None:
            return root
        all=[]
        self.preorder(root,all)
        temp=root
        temp.left=None
        for i in range(1,len(all)):
            a=TreeNode(all[i])
            temp.right=a
            temp=a
        return root

         
