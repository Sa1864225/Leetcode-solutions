# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def partition(self, head: Optional[ListNode], x: int) -> Optional[ListNode]:
        if head==None or head.next==None:
            return head
        b=None
        d=None
        while head!=None:
            if head.val<x:
                a=ListNode(head.val)
                if b==None:
                    b=a
                else:
                    t=b
                    while t.next!=None:
                        t=t.next
                    t.next=a

            else:
                c=ListNode(head.val)
                if d==None:
                    d=c
                else:
                    t=d
                    while t.next!=None:
                        t=t.next
                    t.next=c
            head=head.next
        a=b
        if b==None:
            return d
        while a.next!=None:
            a=a.next
        a.next=d
        return b

                
