# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def hasCycle(self, head: Optional[ListNode]) -> bool:
        if head==None or head.next==None:
            return False
        slow=head
        fast=head
        
        while slow and fast:
            fast = fast.next
            if fast == slow:
                return True
            elif not fast:
                return False
            slow = slow.next
            fast = fast.next
        else:
            return False
