# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def deleteDuplicates(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if head==None or head.next==None:
            return head
        while head!=None and head.next!=None and head.val==head.next.val:
            i=0
            while head.next!=None and head.val==head.next.val :
                head=head.next
                i=1
            if i==1:head=head.next
        
        
        cur=head
        prev=head
        while cur!=None and cur.next!=None:
            if cur.next==None:
                return head
            if cur.val!=cur.next.val:
                prev=cur
                cur=cur.next
                
            else:
                while cur.next!=None and cur.val==cur.next.val:
                    cur=cur.next
                prev.next=cur.next
                cur=cur.next
        
        return head
